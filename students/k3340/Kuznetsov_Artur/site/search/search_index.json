{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u041a\u0443\u0437\u043d\u0435\u0446\u043e\u0432 \u0410\u0440\u0442\u0443\u0440 K3340 WEB2.2","text":""},{"location":"Lr1/task1/","title":"task1","text":""},{"location":"Lr1/task1/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435:","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p>"},{"location":"Lr1/task1/#_2","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f:","text":""},{"location":"Lr1/task1/#udpclientjava","title":"\u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c (UDPClient.java):","text":"<p>\u041a\u043b\u0438\u0435\u043d\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 <code>java.net</code> \u0438 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP. \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u044b: - \u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f UDP-\u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445. - \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb \u043d\u0430 \u043f\u043e\u0440\u0442 8000. - \u041e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. - \u041e\u0442\u0432\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p> <p>\u041a\u043e\u0434 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:</p> <pre><code>package task1;\n\nimport java.io.IOException;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.InetAddress;\n\npublic class UDPClient {\n\n    public static void main(String[] args) {\n        int serverPort = 8000;\n        int bufferSize = 1024;\n        String message = \"Hello, server!\";\n\n        try {\n            DatagramSocket clientSocket = new DatagramSocket();\n\n            InetAddress serverAddress = InetAddress.getByName(\"localhost\");\n            byte[] sendData = message.getBytes();\n            DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, serverAddress, serverPort);\n            clientSocket.send(sendPacket);\n\n            byte[] receiveData = new byte[bufferSize];\n            DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);\n            clientSocket.receive(receivePacket);\n\n            String response = new String(receivePacket.getData()).trim();\n            System.out.println(\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: \" + response);\n\n            clientSocket.close();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre>"},{"location":"Lr1/task1/#udpserverjava","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c (UDPServer.java):","text":"<p>\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8000 \u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0435\u043c\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c \u00abHello, client\u00bb. \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u044b: - \u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f UDP-\u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u043f\u0440\u0438\u0435\u043c\u0430 \u043f\u0430\u043a\u0435\u0442\u043e\u0432. - \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043f\u043e\u0440\u0442 8000. - \u041f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043e\u043d\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u0430. - \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:</p> <pre><code>package task1;\n\nimport java.io.IOException;\nimport java.net.DatagramPacket;\nimport java.net.DatagramSocket;\nimport java.net.InetAddress;\n\npublic class UDPServer {\n\n    public static void main(String[] args) {\n        int serverPort = 8000;\n        int bufferSize = 1024;\n        String responseMessage = \"Hello, client!\";\n\n        try (DatagramSocket serverSocket = new DatagramSocket(serverPort)) {\n            byte[] receiveData = new byte[bufferSize];\n\n            System.out.println(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439...\");\n\n            while (true) {\n                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);\n                serverSocket.receive(receivePacket);\n\n                String message = new String(receivePacket.getData()).trim();\n                System.out.println(\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: \" + message);\n\n                InetAddress clientAddress = receivePacket.getAddress();\n                int clientPort = receivePacket.getPort();\n                byte[] sendData = responseMessage.getBytes();\n                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, clientAddress, clientPort);\n                serverSocket.send(sendPacket);\n            }\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre>"},{"location":"Lr1/task2/","title":"task2","text":""},{"location":"Lr1/task2/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435:","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.</p>"},{"location":"Lr1/task2/#_2","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f:","text":""},{"location":"Lr1/task2/#tcpclientjava","title":"\u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c (TCPClient.java):","text":"<p>\u041a\u043b\u0438\u0435\u043d\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 <code>java.net</code> \u0438 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u044b: - \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0447\u0435\u0440\u0435\u0437 TCP-\u0441\u043e\u043a\u0435\u0442. - \u0412\u0432\u043e\u0434\u0438\u0442 \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438: \u0434\u043b\u0438\u043d\u044b \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0439 <code>a</code>, <code>b</code> \u0438 \u0432\u044b\u0441\u043e\u0442\u044b <code>h</code>. - \u041f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. - \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0435\u0433\u043e \u043d\u0430 \u044d\u043a\u0440\u0430\u043d.</p> <p>\u041a\u043e\u0434 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:</p> <pre><code>package task2;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.Socket;\nimport java.util.Scanner;\n\npublic class TCPClient {\n\n    public static void main(String[] args) {\n        String serverAddress = \"localhost\";\n        int serverPort = 8000;\n\n        try (Socket socket = new Socket(serverAddress, serverPort);\n             BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n             PrintWriter out = new PrintWriter(socket.getOutputStream(), true);\n             Scanner scanner = new Scanner(System.in)) {\n\n            // \u0412\u0432\u043e\u0434 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b\n            System.out.println(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f (a): \");\n            double a = scanner.nextDouble();\n            System.out.println(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f (b): \");\n            double b = scanner.nextDouble();\n            System.out.println(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u044b\u0441\u043e\u0442\u0443 (h): \");\n            double h = scanner.nextDouble();\n\n            // \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\n            out.println(a);\n            out.println(b);\n            out.println(h);\n\n            // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\n            String response = in.readLine();\n            System.out.println(\"\u041f\u043b\u043e\u0449\u0430\u0434\u044c \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438: \" + response);\n\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre>"},{"location":"Lr1/task2/#tcpserverjava","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c (TCPServer.java):","text":"<p>\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u044b: - \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 TCP-\u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8000. - \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b <code>a</code>, <code>b</code> \u0438 <code>h</code> \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. - \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. - \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:</p> <pre><code>package task2;\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\n\npublic class TCPServer {\n\n    public static void main(String[] args) {\n        int serverPort = 8000;\n\n        try (ServerSocket serverSocket = new ServerSocket(serverPort)) {\n            System.out.println(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f...\");\n\n            while (true) {\n                // \u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n                try (Socket clientSocket = serverSocket.accept();\n                     BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\n                     PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true)) {\n\n                    // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n                    double a = Double.parseDouble(in.readLine());\n                    double b = Double.parseDouble(in.readLine());\n                    double h = Double.parseDouble(in.readLine());\n\n                    // \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438\n                    double area = (a + b) * h / 2;\n\n                    // \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n                    out.println(area);\n\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre>"},{"location":"Lr1/task3/","title":"task3","text":""},{"location":"Lr1/task3/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435:","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430\u00a0<code>index.html</code>.</p>"},{"location":"Lr1/task3/#_2","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f:","text":""},{"location":"Lr1/task3/#httpserverjava","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c (HTTPServer.java):","text":"<p>\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043e\u043a\u0435\u0442\u043e\u0432. \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 <code>index.html</code> \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0451 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 HTTP-\u043e\u0442\u0432\u0435\u0442\u0430.</p> <p>\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u044b: 1. \u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8000 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043b\u0430\u0441\u0441\u0430 <code>ServerSocket</code>. 2. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430. 3. \u041f\u0440\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b <code>index.html</code> \u0438 \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435. 4. HTML-\u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 HTTP-\u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u043a\u043e\u0434\u043e\u043c 200 OK. 5. \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:</p> <pre><code>package task3;\n\nimport java.io.*;\nimport java.net.ServerSocket;\n\npublic class HTTPServer {\n    public static void main(String[] args) {\n        int serverPort = 8000;\n        try (var socket = new ServerSocket(serverPort)) {\n            System.out.println(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\");\n            try (\n                    var clientSocket = socket.accept();\n                    var out = new PrintWriter(clientSocket.getOutputStream(), true);\n                    var in = new BufferedReader(new FileReader(\"index.html\"))\n            ) {\n                System.out.println(\"\u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\");\n\n                // \u0427\u0442\u0435\u043d\u0438\u0435 HTML-\u0444\u0430\u0439\u043b\u0430\n                StringBuilder contentBuilder = new StringBuilder();\n                String str;\n                while ((str = in.readLine()) != null) {\n                    contentBuilder.append(str);\n                }\n\n                String htmlContent = contentBuilder.toString();\n\n                // \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 HTTP-\u043e\u0442\u0432\u0435\u0442\u0430\n                out.println(\"HTTP/1.1 200 OK\");\n                out.println(\"Content-Type: text/html\");\n                out.println();\n                out.println(htmlContent);\n                out.flush();\n            }\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre>"},{"location":"Lr1/task4/","title":"task4","text":""},{"location":"Lr1/task4/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435:","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442.</p>"},{"location":"Lr1/task4/#_2","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f:","text":""},{"location":"Lr1/task4/#serverjava-clienthandlerjava","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c (Server.java \u0438 ClientHandler.java):","text":"<p>\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c\u0438 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e. \u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0438\u0437 \u043d\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0435\u0440\u0432\u0435\u0440\u0430: 1. \u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8000 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432. 2. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0432\u0448\u0435\u0433\u043e\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043b\u0430\u0441\u0441\u0430 <code>ClientHandler</code>. 3. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u044b\u043b\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0447\u0430\u0442\u0430. 4. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u0435\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f, \u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:</p> <pre><code>package task4;\n\nimport java.io.IOException;\nimport java.net.ServerSocket;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Server {\n\n    public static List&lt;ClientHandler&gt; clients = new ArrayList&lt;&gt;();\n\n    public static void main(String[] args) {\n        final int serverPort = 8000;\n\n        try (ServerSocket serverSocket = new ServerSocket(serverPort)) {\n            System.out.println(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d, \u043e\u0436\u0438\u0434\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f...\");\n            while (true) {\n                try {\n                    var clientSocket = serverSocket.accept();\n                    ClientHandler clientHandler = new ClientHandler(clientSocket);\n                    clients.add(clientHandler);\n                    System.out.println(\"\u041d\u043e\u0432\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f.\");\n                } catch (IOException e) {\n                    System.err.println(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430: \" + e.getMessage());\n                }\n            }\n        } catch (IOException e) {\n            throw new RuntimeException(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\", e);\n        }\n    }\n}\n</code></pre> <p>\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 (ClientHandler.java):</p> <pre><code>package task4;\n\nimport java.io.*;\nimport java.net.Socket;\nimport java.nio.charset.StandardCharsets;\n\npublic class ClientHandler extends Thread {\n\n    private final Socket socket;\n    private BufferedReader in;\n    private BufferedWriter out;\n\n    public ClientHandler(Socket socket) throws IOException {\n        this.socket = socket;\n        in = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));\n        out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8));\n        start();\n    }\n\n    @Override\n    public void run() {\n        try {\n            String message;\n            while ((message = in.readLine()) != null) {\n                System.out.println(\"\u041d\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435: \" + message);\n                broadcastMessage(message);\n            }\n        } catch (IOException e) {\n            System.out.println(\"\u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f: \" + e.getMessage());\n        } finally {\n            endConnection();\n        }\n    }\n\n    private void broadcastMessage(String message) {\n        for (ClientHandler client : Server.clients) {\n            if (client != this) {\n                try {\n                    client.out.write(message + \"\\n\");\n                    client.out.flush();\n                } catch (IOException e) {\n                    System.out.println(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f: \" + e.getMessage());\n                }\n            }\n        }\n    }\n\n    private void endConnection() {\n        try {\n            if (!socket.isClosed()) {\n                socket.close();\n                in.close();\n                out.close();\n            }\n        } catch (IOException e) {\n            System.out.println(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f: \" + e.getMessage());\n        }\n    }\n}\n</code></pre>"},{"location":"Lr1/task4/#clientjava","title":"\u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c (Client.java):","text":"<p>\u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0435 \u0442\u0430\u043a\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c: \u043e\u0434\u0438\u043d \u043f\u043e\u0442\u043e\u043a \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u2014 \u0437\u0430 \u0438\u0445 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443.</p> <p>\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u0430: 1. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443. 2. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u0441\u0432\u043e\u0435 \u0438\u043c\u044f \u0438 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u0442\u0441\u044f \u043a \u0447\u0430\u0442\u0443. 3. \u041e\u0434\u0438\u043d \u043f\u043e\u0442\u043e\u043a \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u0434\u0440\u0443\u0433\u043e\u0439 \u2014 \u0437\u0430 \u0438\u0445 \u0447\u0442\u0435\u043d\u0438\u0435. 4. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0439\u0442\u0438 \u0438\u0437 \u0447\u0430\u0442\u0430, \u0432\u0432\u0435\u0434\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0443 <code>exit</code>.</p> <p>\u041a\u043e\u0434 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:</p> <pre><code>package task4;\n\nimport java.io.*;\nimport java.net.Socket;\nimport java.nio.charset.StandardCharsets;\n\npublic class Client {\n\n    private Socket socket;\n    private BufferedReader in;\n    private BufferedWriter out;\n    private BufferedReader userInput;\n    private String nickname;\n\n    public Client(String host, int serverPort) {\n        try {\n            socket = new Socket(host, serverPort);\n            userInput = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));\n            in = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));\n            out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8));\n\n            this.setNickname();\n            new ReadMessage().start();\n            new WriteMessage().start();\n        } catch (IOException e) {\n            throw new RuntimeException(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443\", e);\n        }\n    }\n\n    private void setNickname() throws IOException {\n        System.out.print(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0438\u043c\u044f: \");\n        nickname = userInput.readLine();\n        out.write(nickname + \" \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443.\\n\");\n        out.flush();\n    }\n\n    private class ReadMessage extends Thread {\n        @Override\n        public void run() {\n            String message;\n            try {\n                while ((message = in.readLine()) != null) {\n                    System.out.println(message);\n                }\n            } catch (IOException e) {\n                System.out.println(\"\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0440\u0432\u0430\u043d\u043e: \" + e.getMessage());\n            }\n        }\n    }\n\n    private class WriteMessage extends Thread {\n        @Override\n        public void run() {\n            try {\n                String message;\n                while ((message = userInput.readLine()) != null) {\n                    if (message.equalsIgnoreCase(\"exit\")) {\n                        out.write(nickname + \" \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442.\\n\");\n                        out.flush();\n                        socket.close();\n                        break;\n                    }\n                    out.write(\"[\" + nickname + \"]: \" + message + \"\\n\");\n                    out.flush();\n                }\n            } catch (IOException e) {\n                System.out.println(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f: \" + e.getMessage());\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        String host = \"localhost\";\n        int serverPort = 8000;\n        new Client(host, serverPort);\n    }\n}\n</code></pre>"},{"location":"Lr1/task5/","title":"task5","text":""},{"location":"Lr1/task5/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435:","text":"<p>\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438\u00a0<code>socket</code>\u00a0\u0432 Python.</p>"},{"location":"Lr1/task5/#_2","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f:","text":""},{"location":"Lr1/task5/#serverjava","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c (Server.java):","text":"<p>\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0434\u0432\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: 1. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 GET \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c. 2. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 POST \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b \u0438 \u043e\u0446\u0435\u043d\u043a\u0438.</p>"},{"location":"Lr1/task5/#get-","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432:","text":"<ul> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 GET-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0443\u0442\u0438 <code>/grades</code> \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043f\u0435\u0440\u0435\u0447\u043d\u0435\u043c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043e\u0446\u0435\u043d\u043e\u043a.</li> <li>\u0415\u0441\u043b\u0438 \u043e\u0446\u0435\u043d\u043e\u043a \u043d\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"\u041d\u0435\u0442 \u043e\u0446\u0435\u043d\u043e\u043a\".</li> </ul>"},{"location":"Lr1/task5/#post-","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432:","text":"<ul> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0443\u0442\u0438 <code>/addGrade</code> \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0438 \u043e\u0446\u0435\u043d\u043a\u0443 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a.</li> <li>POST-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 <code>discipline=\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435&amp;grade=\u043e\u0446\u0435\u043d\u043a\u0430</code>.</li> <li>\u041e\u0446\u0435\u043d\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 1 \u0434\u043e 5, \u0438\u043d\u0430\u0447\u0435 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443.</li> </ul> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:</p> <pre><code>package task5;\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Server {\n\n    private static final Map&lt;String, Integer&gt; grades = new HashMap&lt;&gt;();\n    private static final int MAX_GRADE = 5;\n    private static final int MIN_GRADE = 1;\n\n    public static void main(String[] args) throws IOException {\n        final int serverPort = 8000;\n\n        try (ServerSocket serverSocket = new ServerSocket(serverPort)) {\n            System.out.println(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\");\n\n            while (true) {\n                Socket clientSocket = serverSocket.accept();\n                new Thread(() -&gt; handleRequest(clientSocket)).start();\n            }\n        }\n    }\n\n    private static void handleRequest(Socket clientSocket) {\n        try (\n                BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\n                BufferedWriter out = new BufferedWriter(new OutputStreamWriter(clientSocket.getOutputStream()))\n        ) {\n            String requestLine = in.readLine();\n            if (requestLine != null) {\n                String[] parts = requestLine.split(\" \");\n                if (parts.length &gt;= 3 &amp;&amp; parts[0].equals(\"GET\") &amp;&amp; parts[1].equals(\"/grades\")) {\n                    handleGetGrades(out);\n                } else if (parts.length &gt;= 3 &amp;&amp; parts[0].equals(\"POST\") &amp;&amp; parts[1].equals(\"/addGrade\")) {\n                    handleAddGrade(in, out);\n                } else {\n                    sendResponse(out, StatusCode.NOT_FOUND, \"Not Found\");\n                }\n            }\n        } catch (IOException e) {\n            System.err.println(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: \" + e.getMessage());\n        }\n    }\n\n    private static void handleGetGrades(BufferedWriter out) throws IOException {\n        StringBuilder html = new StringBuilder();\n        html.append(\"&lt;!DOCTYPE html&gt;&lt;html lang=\\\"ru\\\"&gt;&lt;head&gt;&lt;meta charset=\\\"UTF-8\\\"&gt;&lt;title&gt;\u041e\u0446\u0435\u043d\u043a\u0438&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\");\n        html.append(\"&lt;h1&gt;\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c&lt;/h1&gt;\");\n        html.append(\"&lt;ul&gt;\");\n\n        if (grades.isEmpty()) {\n            html.append(\"&lt;li&gt;\u041d\u0435\u0442 \u043e\u0446\u0435\u043d\u043e\u043a.&lt;/li&gt;\");\n        } else {\n            for (Map.Entry&lt;String, Integer&gt; entry : grades.entrySet()) {\n                html.append(\"&lt;li&gt;\").append(entry.getKey()).append(\": \").append(entry.getValue()).append(\"&lt;/li&gt;\");\n            }\n        }\n\n        html.append(\"&lt;/ul&gt;\");\n        html.append(\"&lt;/body&gt;&lt;/html&gt;\");\n\n        sendResponse(out, StatusCode.OK, html.toString());\n    }\n\n    private static void handleAddGrade(BufferedReader in, BufferedWriter out) {\n        try {\n            StringBuilder payload = new StringBuilder();\n            while (in.ready()) {\n                payload.append((char) in.read());\n            }\n\n            String[] params = payload.toString().split(\"&amp;\");\n            if (params.length == 2) {\n                String discipline = params[0].split(\"=\")[1];\n                int grade = Integer.parseInt(params[1].split(\"=\")[1]);\n\n                if (grade &lt; MIN_GRADE || grade &gt; MAX_GRADE) {\n                    sendResponse(out, StatusCode.BAD_REQUEST, \"\u041e\u0446\u0435\u043d\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 \" + MIN_GRADE + \" \u0434\u043e \" + MAX_GRADE);\n                } else {\n                    grades.put(discipline, grade);\n                    sendResponse(out, StatusCode.OK, \"\u041e\u0446\u0435\u043d\u043a\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\");\n                }\n            } else {\n                sendResponse(out, StatusCode.BAD_REQUEST, \"\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445\");\n            }\n        } catch (NumberFormatException e) {\n            sendResponse(out, StatusCode.BAD_REQUEST, \"\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430\");\n        } catch (Exception e) {\n            sendResponse(out, StatusCode.BAD_REQUEST, \"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445: \" + e.getMessage());\n        }\n    }\n\n    private static void sendResponse(BufferedWriter out, StatusCode statusCode, String message) {\n        try {\n            out.write(\"HTTP/1.1 \" + statusCode.getCode() + \" \" + statusCode + \"\\r\\n\");\n            out.write(\"Content-Type: text/html; charset=UTF-8\\r\\n\\r\\n\");\n            out.write(message);\n            out.flush();\n        } catch (IOException e) {\n            System.err.println(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0430: \" + e.getMessage());\n        }\n    }\n}\n</code></pre>"}]}