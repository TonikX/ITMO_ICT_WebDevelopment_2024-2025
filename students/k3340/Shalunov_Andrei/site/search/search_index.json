{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Lr1/zad1/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1:","text":""},{"location":"Lr1/zad1/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p>"},{"location":"Lr1/zad1/#_2","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code>.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.</li> </ul>"},{"location":"Lr1/zad1/#_3","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","text":""},{"location":"Lr1/zad1/#_4","title":"\u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c","text":"<p>\u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b UDP. \u041f\u043e\u0441\u043b\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.</p> <pre><code>import socket\n\nIP = 'localhost'\nPORT = 8080\nmessage = 'Hello, server'\n\nclient_sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nclient_sock.sendto(message.encode(), (IP, PORT))\n\nresponse, server_address = client_sock.recvfrom(1024)\nprint(response.decode())\nclient_sock.close()\n</code></pre>"},{"location":"Lr1/zad1/#_5","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c","text":"<p>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0435\u0433\u043e \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043e\u0442\u0432\u0435\u0442\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435.</p> <pre><code>import socket\n\nIP = 'localhost'\nPORT = 8080\n\nserver_sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nserver_sock.bind((IP, PORT))\n\nresponse, client_address = server_sock.recvfrom(1024)\nprint(response.decode())\n\nmessage = 'Hello, client'\nserver_sock.sendto(message.encode(), client_address)\nserver_sock.close()\n</code></pre>"},{"location":"Lr1/zad2/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2:","text":""},{"location":"Lr1/zad2/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.</p>"},{"location":"Lr1/zad2/#_2","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439:","text":"<ol> <li>\u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430.</li> </ol>"},{"location":"Lr1/zad2/#_3","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code>.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP.</li> </ul>"},{"location":"Lr1/zad2/#_4","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","text":""},{"location":"Lr1/zad2/#_5","title":"\u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c","text":"<p>\u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u0438\u043d\u0443 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0432\u044b\u0441\u043e\u0442\u0443 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.</p> <pre><code>import socket\n\nIP = 'localhost'\nPORT = 8080\n\nclient_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient_sock.connect((IP, PORT))\n\na = float(input('\u0414\u043b\u0438\u043d\u0430: '))\nh = float(input('\u0412\u044b\u0441\u043e\u0442\u0430: '))\ndata = f'{a},{h}'\nclient_sock.send(data.encode())\nresponse = client_sock.recv(1024).decode()\nprint(f'\u041f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 {response}')\nclient_sock.close()\n</code></pre>"},{"location":"Lr1/zad2/#_6","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c","text":"<p>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 (\u0434\u043b\u0438\u043d\u0430 \u0438 \u0432\u044b\u0441\u043e\u0442\u0430), \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443.</p> <pre><code>import socket\n\nIP = 'localhost'\nPORT = 8080\n\n\ndef findSquare(a, h):\n    return a * h\n\nserver_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_sock.bind((IP, PORT))\nserver_sock.listen()\n\nwhile True:\n    connection, address = server_sock.accept()\n    print(connection, address)\n    data = connection.recv(1024).decode()\n    a, h = map(float, data.split(','))\n    connection.sendall(str(findSquare(a, h)).encode())\n    connection.close()\n</code></pre>"},{"location":"Lr1/zad3/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3:","text":""},{"location":"Lr1/zad3/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 <code>index.html.</code></p>"},{"location":"Lr1/zad3/#_2","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code>.</li> </ul>"},{"location":"Lr1/zad3/#_3","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","text":""},{"location":"Lr1/zad3/#_4","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c","text":"<p>\u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 HTTP-\u043e\u0442\u0432\u0435\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u0424\u0430\u0439\u043b <code>index.html</code> \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</p> <pre><code>import socket\n\nHOST = 'localhost'\nPORT = 8080\n\nserver_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_sock.bind((HOST, PORT))\nserver_sock.listen()\nhtml_content = open('index.html').read()\n\nwhile True:\n    client_connection, client_address = server_sock.accept()\n    request = client_connection.recv(1024).decode()\n\n    http_response = (\n        \"HTTP/1.1 200 OK\\r\\n\"\n        \"Content-Type: text/html; charset=UTF-8\\r\\n\"\n        f\"Content-Length: {len(html_content)}\\r\\n\"\n        \"Connection: close\\r\\n\"\n        \"\\r\\n\"\n        + html_content\n    )\n\n    client_connection.sendall(http_response.encode())\n</code></pre>"},{"location":"Lr1/zad3/#html-","title":"HTML-\u0444\u0430\u0439\u043b","text":"<p>HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443, \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Testing socket&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Lr1/zad3/#_5","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u043e\u0442\u0432\u0435\u0442\u0430:","text":""},{"location":"Lr1/zad3/#http-","title":"HTTP-\u0437\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:","text":"<pre><code>GET /favicon.ico HTTP/1.1\nHost: localhost:8080\nConnection: keep-alive\nsec-ch-ua: \"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"YaBrowser\";v=\"24.7\", \"Yowser\";v=\"2.5\"\nsec-ch-ua-mobile: ?0\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 YaBrowser/24.7.0.0 Safari/537.36\nsec-ch-ua-platform: \"Windows\"\nAccept: image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: no-cors\nSec-Fetch-Dest: image\nReferer: http://localhost:8080/\nAccept-Encoding: gzip, deflate, br, zstd\nAccept-Language: ru,en;q=0.9\n</code></pre>"},{"location":"Lr1/zad3/#http-_1","title":"HTTP-\u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:","text":"<pre><code>HTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\nContent-Length: 150\nConnection: close\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Testing socket&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Lr1/zad4/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4:","text":""},{"location":"Lr1/zad4/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442.</p>"},{"location":"Lr1/zad4/#_2","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:","text":"<ul> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 <code>socket</code> \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f TCP-\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439.</li> <li>\u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading.</li> </ul>"},{"location":"Lr1/zad4/#_3","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:","text":"<ul> <li>\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP: 100% \u0431\u0430\u043b\u043b\u043e\u0432.</li> <li>\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b UDP: 80% \u0431\u0430\u043b\u043b\u043e\u0432.</li> <li>\u0414\u043b\u044f UDP \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>threading</code> \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0435.</li> <li>\u0414\u043b\u044f TCP \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.</li> </ul>"},{"location":"Lr1/zad4/#_4","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c:","text":"<p>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0412\u0441\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u044b, \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0447\u0430\u0442\u0430.</p> <pre><code>import socket\nfrom threading import Thread\n\n\ndef accept_incoming_connections():\n    while True:\n        client, client_address = sock.accept()\n        print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0430\u0434\u0440\u0435\u0441\u043e\u043c {client_address}.\")\n        message = \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0451 \u0438\u043c\u044f\"\n        client.send(message.encode())\n        client_name = client.recv(1024).decode()\n        clients[client_name] = client\n        Thread(target=handle_client, args=(client, client_name)).start()\n\n\ndef handle_client(client, client_name):\n    welcome_message = f\"{client_name}, \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u0447\u0430\u0442\"\n    client.send(welcome_message.encode())\n    message_other_clients = f\"\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435! \u0412 \u0447\u0430\u0442 \u0437\u0430\u0448\u0435\u043b \u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c {client_name}\"\n    broadcast(message_other_clients, client_name)\n\n    while True:\n        try:\n            message = client.recv(1024).decode()\n            print(f\"{client_name}: {message}\")\n            if message.lower() == \"exit\":\n                goodbye_message = f\"{client_name} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442\"\n                broadcast(goodbye_message, client_name)\n                client.close()\n                del clients[client_name]\n                break\n            else:\n                broadcast(f\"{client_name}: {message}\", client_name)\n        except:\n            print(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c {client_name}: {e}\")\n            goodbye_message = f\"{client_name} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442\"\n            broadcast(goodbye_message, client_name)\n            client.close()\n            del clients[client_name]\n            break\n\n\ndef broadcast(msg, sender_name):\n    if clients:\n        for client_name, client_socket in clients.items():\n            if client_name != sender_name:\n                client_socket.sendall(msg.encode())\n\n\nclients = {}\n\nHOST = 'localhost'\nPORT = 8080\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((HOST, PORT))\nsock.listen()\nprint(\"\u0416\u0434\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439\")\naccept_thread = Thread(target=accept_incoming_connections)\naccept_thread.start()\naccept_thread.join()\nsock.close()\n</code></pre>"},{"location":"Lr1/zad4/#_5","title":"\u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c:","text":"<p>\u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0447\u0430\u0442\u0430 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u0432\u043e\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438.</p> <pre><code>import socket\nfrom threading import Thread\n\nHOST = 'localhost'\nPORT = 8080\n\nclient_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient_sock.connect((HOST, PORT))\n\n\ndef receive():\n    while True:\n        try:\n            message = client_sock.recv(1024).decode()\n            if message:\n                print(message)\n            else:\n                print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043a\u0440\u044b\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\")\n                break\n        except Exception as e:\n            print(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f: {e}\")\n            break\n\ndef send():\n    while True:\n        message = input()\n        client_sock.send(message.encode())\n        if message.lower() == \"exit\":\n            print(\"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u0447\u0430\u0442\u0430\")\n            client_sock.close()\n            break\n\n\nreceive_thread = Thread(target=receive)\nreceive_thread.start()\n\nsend_thread = Thread(target=send)\nsend_thread.start()\n\nreceive_thread.join()\nsend_thread.join()\n</code></pre>"},{"location":"Lr1/zad5/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5:","text":"<p>\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python.</p>"},{"location":"Lr1/zad5/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435:","text":"<ul> <li> <p>\u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d:</p> </li> <li> <p>\u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435.</p> </li> <li>\u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</li> </ul>"},{"location":"Lr1/zad5/#_2","title":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442: 1. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c. 2. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435.</p> <pre><code>import socket\nfrom threading import Thread\n\ngrades = {}\n\n\ndef handle_client(client_sock):\n    request = client_sock.recv(1024).decode()\n    method, body, content_length = parse_request(request)\n    print(f\"\u041d\u043e\u0432\u044b\u0439 {method} \u0437\u0430\u043f\u0440\u043e\u0441\")\n\n    if method == 'GET':\n        response_body = generate_html()\n        http_response = (\n                \"HTTP/1.1 200 OK\\r\\n\"\n                \"Content-Type: text/html; charset=UTF-8\\r\\n\"\n                f\"Content-Length: {len(response_body)}\\r\\n\"\n                \"\\r\\n\"\n                + response_body\n        )\n        client_sock.sendall(http_response.encode())\n\n    elif method == 'POST':\n        data = body[:content_length]\n        pairs = data.split('&amp;')\n        post_grades = {}\n\n        for pair in pairs:\n            key, value = pair.split('=')\n            if key.startswith('subject'):\n                subject_key = key\n                subject_value = value\n                post_grades[subject_key] = {'subject': subject_value, 'grade': None}\n            if key.startswith('grade'):\n                grade_key = key.replace('grade', 'subject')\n                grade_value = value\n                if grade_key in post_grades:\n                    post_grades[grade_key]['grade'] = grade_value\n\n            for key, value in post_grades.items():\n                if value['subject'] and value['grade']:\n                    grades[value['subject']] = value['grade']\n\n        response = \"\"\"HTTP/1.1 200 OK\n        Content-Type: text/plain\n\n        Data successfully saved.\"\"\"\n        client_sock.sendall(response.encode())\n\n    client_sock.close()\n\n\ndef parse_request(request):\n    parts = request.split('\\r\\n\\r\\n')\n    headers = parts[0]\n    body = parts[1] if len(parts) &gt; 1 else ''\n    method, path, version = headers.split('\\r\\n')[0].split(' ')\n    content_length = 0\n    content_length_header = [head for head in headers.split('\\r\\n') if \"Content-Length\" in head]\n    if content_length_header:\n        content_length = int(content_length_header[0].split(': ')[1])\n\n    return method, body, content_length\n\n\ndef generate_html():\n    sorted_grades = dict(sorted(grades.items()))\n    html_text = \"\"\"\n    &lt;html&gt;\n    &lt;head&gt;&lt;title&gt;My grades&lt;/title&gt;&lt;/head&gt;\n    &lt;body&gt;\n        &lt;h2&gt;Shalunov Andrei marks&lt;/h2&gt;\n        &lt;table border=\"3\"&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Subject&lt;/th&gt;\n                &lt;th&gt;Grade&lt;/th&gt;\n            &lt;/tr&gt;\"\"\"\n\n    for subject, grade in sorted_grades.items():\n        html_text += f\"\"\"\n        &lt;tr&gt;\n            &lt;td&gt;{subject}&lt;/td&gt;\n            &lt;td&gt;{grade}&lt;/td&gt;\n        \"\"\"\n\n    html_text += \"\"\"\n        &lt;/table&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\"\"\"\n\n    return html_text\n\n\nHOST = 'localhost'\nPORT = 8080\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((HOST, PORT))\nsock.listen()\n\nwhile True:\n    connection, _ = sock.accept()\n    thread = Thread(target=handle_client, args=(connection,))\n    thread.start()\n</code></pre>"},{"location":"Lr1/zad5/#_3","title":"\u041f\u0440\u043e\u0446\u0435\u0441\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f:","text":"<ol> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432.</li> <li>\u041a\u043b\u0438\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:</li> </ol> <pre><code>curl -X POST http://127.0.0.1:8080/ -d \"subject=Mathematics&amp;grade=5\"\n</code></pre> <pre><code>curl -X POST http://127.0.0.1:8080/ -d \"subject1=Mathematics&amp;grade1=5&amp;subject2=Russian&amp;grade2=4&amp;subject3=Physics&amp;grade3=3\"\n</code></pre> <p>\u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u044d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043e\u0446\u0435\u043d\u043a\u0443 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u0422\u0430\u043a\u0436\u0435 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: text/plain\n\nData successfully saved.\n</code></pre> <ol> <li>\u041a\u043b\u0438\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c GET-\u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c\u0438 \u0438 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438:</li> </ol> <pre><code>GET / HTTP/1.1\n</code></pre> <p>\u0421\u0435\u0440\u0432\u0435\u0440 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043e\u0446\u0435\u043d\u043e\u043a \u0432 \u0432\u0438\u0434\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b.</p> <ol> <li>HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e:</li> </ol> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;My grades&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n    &lt;h2&gt;Shalunov Andrei marks&lt;/h2&gt;\n    &lt;table border=\"3\"&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Subject&lt;/th&gt;\n            &lt;th&gt;Grade&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;{subject}&lt;/td&gt;\n            &lt;td&gt;{grade}&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"}]}